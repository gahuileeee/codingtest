package Just;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.TreeMap;
// 좌표 압축 (18870)

//수직선 위에 N개의 좌표 X1, X2, ..., XN이 있다. 이 좌표에 좌표 압축을 적용하려고 한다.
//
//Xi를 좌표 압축한 결과 X'i의 값은 Xi > Xj를 만족하는 서로 다른 좌표 Xj의 개수와 같아야 한다.
//
//X1, X2, ..., XN에 좌표 압축을 적용한 결과 X'1, X'2, ..., X'N를 출력해보자.
public class Main {
	
	public static void main(String[]args) throws IOException{
		TreeMap<Integer, Integer> tree= new TreeMap<>();
		TreeMap<Integer, Integer> tree2= new TreeMap<>();
		
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int a= Integer.parseInt(br.readLine());
	
		int [] arr= new int [a];
		StringTokenizer st= new StringTokenizer(br.readLine());
		for(int i=0; i<a; i++) {
			int k=Integer.parseInt(st.nextToken());
			arr[i]=k;
			tree.put(k, 0);
		}
		int size= tree.size();
		for(int i=0; i<size; i++) {
			int f= tree.firstKey();
			tree2.put(f, i);
			tree.pollFirstEntry();
		}
		StringBuffer sb= new StringBuffer();
		for(int i=0 ; i<a; i++) {
			sb.append(tree2.get(arr[i])+" ");
		}
		System.out.println(sb.toString());
	}
} //class 종료